services:
  n8n_pgsql:
    image: ankane/pgvector
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - ./.volumes/postgres:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    networks:
      - n8n-space
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n_redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./.volumes/redis:/data
    networks:
      - n8n-space
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  n8n_main:
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    container_name: n8n-main
    ports:
      - "5678:5678"
    volumes:
      - ./.volumes/n8n:/home/node/.n8n
    networks:
      - n8n-space
    environment:
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=true
      - TZ=${TZ}

      # Database
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n_pgsql
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}

      # Queue Mode
      # - EXECUTIONS_MODE=queue
      # - QUEUE_BULL_REDIS_HOST=n8n_redis
      # - QUEUE_BULL_REDIS_PORT=6379
      # - QUEUE_BULL_REDIS_DB=0
      # - QUEUE_WORKER_TIMEOUT=${QUEUE_WORKER_TIMEOUT}
      # - QUEUE_RECOVERY_INTERVAL=${QUEUE_RECOVERY_INTERVAL}
      # - N8N_RUNNERS_ENABLED=true

      # Vector Store
      # - N8N_AI_ENABLED=true
      - VECTOR_DB_TYPE=postgres
      - VECTOR_DB_POSTGRES_HOST=n8n_pgsql
      - VECTOR_DB_POSTGRES_PORT=5432
      - VECTOR_DB_POSTGRES_DATABASE=${POSTGRES_DB}
      - VECTOR_DB_POSTGRES_USER=${POSTGRES_NON_ROOT_USER}
      - VECTOR_DB_POSTGRES_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}

      # Security
      - N8N_SECURE_COOKIE=${N8N_SECURE_COOKIE}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

    depends_on:
      n8n_pgsql:
        condition: service_healthy
      n8n_redis:
        condition: service_healthy

  n8n_worker:
    image: docker.n8n.io/n8nio/n8n
    command: worker
    restart: unless-stopped
    ports:
      - "5679:5678"
    volumes:
      - ./.volumes/n8n:/home/node/.n8n
    networks:
      - n8n-space
    environment:
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${TZ}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true

      # Database
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n_pgsql
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}

      # Queue Mode
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=n8n_redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      - QUEUE_WORKER_TIMEOUT=${QUEUE_WORKER_TIMEOUT}
      - QUEUE_RECOVERY_INTERVAL=${QUEUE_RECOVERY_INTERVAL}
      - N8N_RUNNERS_ENABLED=true

      # Vector Store
      # - N8N_AI_ENABLED=true
      - VECTOR_DB_TYPE=postgres
      - VECTOR_DB_POSTGRES_HOST=n8n_pgsql
      - VECTOR_DB_POSTGRES_PORT=5432
      - VECTOR_DB_POSTGRES_DATABASE=${POSTGRES_DB}
      - VECTOR_DB_POSTGRES_USER=${POSTGRES_NON_ROOT_USER}
      - VECTOR_DB_POSTGRES_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}

      # Security
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

    depends_on:
      n8n_pgsql:
        condition: service_healthy
      n8n_redis:
        condition: service_healthy

  n8n_webhook:
    image: docker.n8n.io/n8nio/n8n
    command: webhook
    restart: unless-stopped
    container_name: n8n-webhook
    ports:
      - "5680:5678"
    volumes:
      - ./.volumes/n8n:/home/node/.n8n
    networks:
      - n8n-space
    environment:
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - TZ=${TZ}

      # Database
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n_pgsql
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}

      # Queue Mode
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=n8n_redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      - QUEUE_WORKER_TIMEOUT=${QUEUE_WORKER_TIMEOUT}
      - QUEUE_RECOVERY_INTERVAL=${QUEUE_RECOVERY_INTERVAL}
      - N8N_RUNNERS_ENABLED=true

      # Security
      - N8N_SECURE_COOKIE=${N8N_SECURE_COOKIE}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

    depends_on:
      n8n_pgsql:
        condition: service_healthy
      n8n_redis:
        condition: service_healthy

networks:
  n8n-space:
    driver: bridge
