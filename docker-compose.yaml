services:
  n8n_editor:
    image: n8nio/n8n
    restart: unless-stopped
    container_name: n8n-editor
    ports:
      - 5678:5678
    volumes:
      - ./.volumes/n8n:/home/node/.n8n
    networks:
      - n8n-space
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - QUEUE_BULL_REDIS_HOST=n8n_redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      - QUEUE_WORKER_TIMEOUT=30
      - QUEUE_RECOVERY_INTERVAL=60
    depends_on:
      - n8n_pgsql
      - n8n_redis
  n8n_worker:
    image: docker.n8n.io/n8nio/n8n
    command: n8n worker
    restart: always
    environment:
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=n8n_redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_BULL_REDIS_DB=0
      - QUEUE_WORKER_TIMEOUT=30
      - QUEUE_RECOVERY_INTERVAL=60
    networks:
      - n8n-space
    depends_on:
      - n8n_pgsql
      - n8n_redis
  n8n_webhook:
    image: n8nio/n8n
    restart: unless-stopped
    container_name: n8n-webhook
    ports:
      - 5676:5678
    networks:
      - n8n-space
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n_pgsql
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n
      - QUEUE_BULL_REDIS_HOST=redis
      - EXECUTIONS_MODE=queue
    command: webhook
    depends_on:
      - n8n_pgsql
      - n8n_redis
  n8n_pgsql:
    image: ankane/pgvector:pg17
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n
    volumes:
      - ./.volumes/postgres:/var/lib/postgresql/data
    networks:
      - n8n-space
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
  n8n_redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - ./.volumes/redis:/data
    networks:
      - n8n-space
networks:
  n8n-space:
    driver: bridge
